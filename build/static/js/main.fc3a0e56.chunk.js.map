{"version":3,"sources":["components/ActivitySymbol.js","components/Card.js","components/InstructionsScreen.js","components/SwipeScreen.js","components/TrashButton.js","App.js","serviceWorker.js","index.js"],"names":["Logo","size","color","style","width","viewBox","fill","height","tabIndex","className","d","fillRule","clipRule","formatDate","dateString","Moment","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","CardContainer","styled","div","TitleContainer","Title","h1","MetaContainer","TooltipContainer","Card","item","monday","useContext","MondayContext","name","showDelay","position","moveBy","main","secondary","content","created_at","updated_at","ActivitySymbol","Button","sizes","SMALL","kind","kinds","TERTIARY","colors","ON_PRIMARY_COLOR","onClick","execute","itemId","id","InstructionScreenContainer","InstructionsScreen","data-testid","SwipeScreenContainer","Swipable","TinderCard","ButtonContainer","StyledButton","LoaderContainer","Instructions","InstructionContents","TrashButtonContainer","SwipeScreen","loading","items","trash","onSwipe","onTrashButtonPress","onKeepButtonPress","onEmptyTrash","svgClassName","map","i","edata-testid","key","dir","preventSwipe","flickOnSwipe","length","window","open","disabled","LARGE","PRIMARY","NEGATIVE","leftIcon","POSITIVE","rightIcon","Container","Counter","TrashButton","MEDIUM","SECONDARY","ariaLabel","mondaySdk","React","createContext","App","props","state","settings","context","keep","lastAction","this","backlog_group","setState","api","variables","boardIds","groupIds","then","res","groups","data","boards","listen","prevBacklockGroup","pullGroupData","direction","remainingItems","topItem","swipedItem","console","log","prevState","concat","filter","mutationType","delete_mode","mutation","reduce","acc","curr","hasSelectedBacklogGroup","Provider","value","bind","swipeOnTopItem","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc3a0e56.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Logo = ({ size, color }) => (\n  <div style={{ width: size || \"32px\", color: color || \"#000\" }}>\n    <svg\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      width=\"32\"\n      height=\"32\"\n      tabIndex=\"0\"\n      className=\"icon_component icon_component--clickable\"\n    >\n      <path\n        d=\"M9.98296 1.97614C7.85942 1.97614 5.82285 2.81971 4.32128 4.32128C2.81971 5.82285 1.97614 7.85942 1.97614 9.98296C1.97614 12.1065 2.81971 14.1431 4.32128 15.6446C5.82285 17.1462 7.85942 17.9898 9.98296 17.9898C12.1065 17.9898 14.1431 17.1462 15.6446 15.6446C17.1462 14.1431 17.9898 12.1065 17.9898 9.98296C17.9898 7.85942 17.1462 5.82285 15.6446 4.32128C14.1431 2.81971 12.1065 1.97614 9.98296 1.97614ZM5.38194 5.38194C6.6022 4.16167 8.25724 3.47614 9.98296 3.47614C11.7087 3.47614 13.3637 4.16167 14.584 5.38194C15.8042 6.6022 16.4898 8.25724 16.4898 9.98296C16.4898 11.7087 15.8042 13.3637 14.584 14.584C13.3637 15.8042 11.7087 16.4898 9.98296 16.4898C8.25724 16.4898 6.6022 15.8042 5.38194 14.584C4.16167 13.3637 3.47614 11.7087 3.47614 9.98296C3.47614 8.25724 4.16167 6.6022 5.38194 5.38194ZM7.29283 10.7453L8.48668 7.76067L10.3736 13.1057L10.3737 13.1058C10.4523 13.3285 10.5933 13.524 10.7798 13.669C10.9663 13.814 11.1905 13.9024 11.4257 13.9237C11.661 13.945 11.8974 13.8983 12.1069 13.7892C12.3165 13.6801 12.4902 13.5131 12.6076 13.3081L12.6078 13.3079L13.8044 11.2168H15.3047C15.7189 11.2168 16.0547 10.881 16.0547 10.4668C16.0547 10.0526 15.7189 9.71676 15.3047 9.71676H13.3695C13.1005 9.71676 12.8521 9.8608 12.7185 10.0943L11.5946 12.0583L9.66458 6.59126L9.66381 6.58909C9.57982 6.35351 9.4262 6.14904 9.2233 6.0028C9.02041 5.85656 8.77785 5.77547 8.5278 5.77029C8.27775 5.76511 8.03204 5.83609 7.82327 5.9738C7.61449 6.11151 7.45253 6.30945 7.35887 6.54134L7.35886 6.54134L7.35793 6.54368L6.08869 9.71676H4.66132C4.2471 9.71676 3.91132 10.0526 3.91132 10.4668C3.91132 10.881 4.2471 11.2168 4.66132 11.2168H6.59647C6.90315 11.2168 7.17893 11.0301 7.29283 10.7453Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      ></path>\n    </svg>\n  </div>\n);\n\nexport default Logo;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Moment from \"moment\";\nimport { Button, Tooltip } from \"monday-ui-react-core\";\nimport { MondayContext } from \"../App\";\nimport ActivitySymbol from \"./ActivitySymbol\";\n\nconst formatDate = (dateString) => {\n  const date = new Moment(dateString);\n  return date.calendar({\n    sameDay: \"[Today]\",\n    nextDay: \"[Tomorrow]\",\n    nextWeek: \"dddd\",\n    lastDay: \"[Yesterday]\",\n    lastWeek: \"[Last] dddd\",\n    sameElse: \"DD/MM/YYYY\",\n  });\n};\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  cursor: pointer;\n  user-select: none;\n  position: relative;\n  background-color: #fff;\n  width: 80vw;\n  max-width: 260px;\n  height: 384px;\n  border-radius: 8px;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background-color: #0085ff;\n  color: #fff;\n  padding: 24px 16px 16px;\n  overflow-y: scroll;\n`;\n\nconst Title = styled.h1`\n  margin: 0 8px;\n  flex: 1;\n`;\n\nconst MetaContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TooltipContainer = styled.div`\n  opacity: 0.32;\n  position: relative;\n  bottom: -2px;\n`;\n\nconst Card = ({ item }) => {\n  const monday = useContext(MondayContext);\n  return (\n    <CardContainer>\n      <TitleContainer>\n        <Title>{item.name}</Title>\n        <MetaContainer>\n          <TooltipContainer>\n            <Tooltip\n              showDelay={300}\n              position={\"top\"}\n              moveBy={{ main: 24, secondary: 0 }}\n              content={\n                <>\n                  <div>\n                    <b>Created:</b> {formatDate(item.created_at)}\n                  </div>\n                  <div>\n                    <b>Updated:</b> {formatDate(item.updated_at)}\n                  </div>\n                </>\n              }\n            >\n              <ActivitySymbol color={\"#fff\"} />\n            </Tooltip>\n          </TooltipContainer>\n          <Button\n            size={Button.sizes.SMALL}\n            kind={Button.kinds.TERTIARY}\n            color={Button.colors.ON_PRIMARY_COLOR}\n            onClick={() => {\n              // TODO: updatee to `kind: \"columns\"` after API is fixed\n              monday.execute(\"openItemCard\", {\n                itemId: item.id,\n                kind: \"columns\",\n              });\n            }}\n          >\n            View Item\n          </Button>\n        </MetaContainer>\n      </TitleContainer>\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InstructionScreenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  background-color: #f5f6f8;\n`;\n\nconst InstructionsScreen = () => (\n  <InstructionScreenContainer data-testid=\"instructions\">\n    {/* <h1>Matchbox</h1>\n    <h2>Clean up your backlog</h2> */}\n    <p>Please select a backlog group in the settings panel to use this view.</p>\n  </InstructionScreenContainer>\n);\n\nexport default InstructionsScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TinderCard from \"react-tinder-card\";\nimport { Button, Loader } from \"monday-ui-react-core\";\nimport { Card, TrashButton } from \"./index\";\n\nconst SwipeScreenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  background-color: #f5f6f8;\n`;\n\n// We want this to take up space even if there are no cards...\nconst CardContainer = styled.div`\n  display: flex;\n  width: 100vh;\n  max-width: 260px;\n  min-height: 384px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Swipable = styled(TinderCard)`\n  position: absolute;\n  border-radius: 16px;\n  &:first-child,\n  &:last-child {\n    box-shadow: 0px 6px 20px -2px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  padding: 24px;\n  margin-top: 24px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin: 0px 12px;\n`;\n\nconst LoaderContainer = styled.div`\n  width: 48px;\n  align-self: center;\n  margin: 0 auto;\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  max-width: 260px;\n  height: 384px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 24px;\n  box-sizing: border-box;\n  background-color: #e6e9ef;\n  // border: 1px solid #c5c7d0;\n  overflow: hidden;\n`;\n\nconst InstructionContents = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #e6e9ef;\n  padding: 12px;\n  width: 100%;\n`;\n\nconst TrashButtonContainer = styled.div`\n  position: absolute;\n  bottom: 12px;\n  right: 12px;\n`;\n\nconst SwipeScreen = ({\n  loading,\n  items,\n  trash,\n  onSwipe,\n  onTrashButtonPress,\n  onKeepButtonPress,\n  onEmptyTrash,\n}) => {\n  if (!items) return null;\n  return (\n    <SwipeScreenContainer data-testid=\"swipe-screen\">\n      {loading ? (\n        <CardContainer>\n          <LoaderContainer data-testid=\"swipe-loader\">\n            <Loader svgClassName=\"loader-size-md\" />\n          </LoaderContainer>\n        </CardContainer>\n      ) : (\n        <>\n          <CardContainer>\n            {items.map((item, i) => (\n              <Swipable\n                edata-testid=\"swipe-cards\"\n                key={`swipe-${i}`}\n                onSwipe={(dir) => onSwipe(dir, item)}\n                preventSwipe={[\"up\", \"down\"]}\n                flickOnSwipe\n              >\n                <Card item={item} />\n              </Swipable>\n            ))}\n            {items.length === 0 && (\n              <Instructions data-testid=\"items-empty-instructions\">\n                <div>\n                  <h2>You've swiped on everything!</h2>\n                  <p>Empty the trash or select a new group to start fresh.</p>\n                </div>\n                <InstructionContents>\n                  <Button\n                    size={Button.sizes.SMALL}\n                    kind={Button.kinds.TERTIARY}\n                    onClick={() => {\n                      window.open(\n                        \"https://support.monday.com/hc/en-us/articles/115005312729-The-Recycle-Bin\",\n                        \"_blank\"\n                      );\n                    }}\n                  >\n                    How can I view removed items?\n                  </Button>\n                </InstructionContents>\n              </Instructions>\n            )}\n          </CardContainer>\n          <ButtonContainer>\n            <StyledButton\n              onClick={onTrashButtonPress}\n              disabled={!(items.length > 0)}\n              size={Button.sizes.LARGE}\n              kind={Button.kinds.PRIMARY}\n              color={Button.colors.NEGATIVE}\n              leftIcon=\"fa fa-chevron-left\"\n            >\n              Trash It\n            </StyledButton>\n            <StyledButton\n              onClick={onKeepButtonPress}\n              disabled={!(items.length > 0)}\n              size={Button.sizes.LARGE}\n              kind={Button.kinds.PRIMARY}\n              color={Button.colors.POSITIVE}\n              rightIcon=\"fa fa-chevron-right\"\n            >\n              Keep It\n            </StyledButton>\n          </ButtonContainer>\n          <TrashButtonContainer>\n            <TrashButton trash={trash} onClick={() => onEmptyTrash()} />\n          </TrashButtonContainer>\n        </>\n      )}\n    </SwipeScreenContainer>\n  );\n};\n\nexport default SwipeScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"monday-ui-react-core\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 145px;\n  height: 40px;\n`;\n\nconst Counter = styled.div`\n  position: absolute;\n  top: -5px;\n  right: 0;\n  background-color: #0085ff;\n  padding: 2px 5px 1px 5px;\n  border-radius: 12px;\n  color: #ffffff;\n  font-size: 11px;\n  font-weight: 400;\n  transform: translateX(30%);\n  z-index: 10000;\n`;\n\nconst TrashButton = ({ trash, onClick, color }) => (\n  <Container>\n    <Counter>{trash.length}</Counter>\n    <Button\n      size={Button.sizes.MEDIUM}\n      kind={Button.kinds.SECONDARY}\n      leftIcon=\"fa fa-trash-alt\"\n      ariaLabel=\"Open Trash\"\n      onClick={onClick}\n      disabled={trash.length === 0}\n      color={color}\n    >\n      Empty Trash\n    </Button>\n  </Container>\n);\n\nexport default TrashButton;\n","import React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { SwipeScreen, InstructionsScreen } from \"./components\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport \"./App.css\";\n\nexport const monday = mondaySdk();\n\nexport const MondayContext = React.createContext();\n\nconst DELETE_DIR = \"left\";\nconst KEEP_DIR = \"right\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Default state\n    this.state = {\n      // Monday Data\n      settings: {},\n      context: {},\n      // App Settings\n      loading: false,\n      items: [],\n      trash: [],\n      keep: [],\n      // Swipe Management\n      lastAction: null,\n    };\n  }\n\n  pullGroupData() {\n    if (!this.state.settings.backlog_group) return;\n    this.setState({ loading: true });\n    monday\n      .api(\n        `query ($boardIds: [Int], $groupIds: [String]) {\n          boards(ids:$boardIds, limit:1) {\n            groups(ids:$groupIds) {\n              items {\n                id\n                name\n                created_at\n                updated_at\n              }\n            }\n          }\n        }`,\n        {\n          variables: {\n            boardIds: this.state.context.boardIds,\n            groupIds: this.state.settings.backlog_group,\n          },\n        }\n      )\n      .then((res) => {\n        const { groups } = res.data.boards[0];\n        if (groups.length > 0) {\n          this.setState({ items: groups[0].items, trash: [], keep: [] });\n        }\n        this.setState({ loading: false });\n      });\n  }\n\n  componentDidMount() {\n    monday.listen(\"settings\", (res) => {\n      const prevBacklockGroup = this.state.settings?.backlog_group ?? null;\n      this.setState({ settings: res.data });\n      if (prevBacklockGroup !== res.data?.backlog_group) {\n        this.pullGroupData();\n      }\n    });\n    monday.listen(\"context\", (res) => {\n      this.setState({ context: res.data });\n    });\n  }\n\n  swipeOnTopItem(direction) {\n    const remainingItems = this.state.items;\n    if (remainingItems.length > 0) {\n      const topItem = remainingItems[remainingItems.length - 1];\n      this.onSwipe(direction, topItem);\n    }\n  }\n\n  onSwipe(direction, swipedItem) {\n    console.log(\"You swiped: \" + direction, \"on\", swipedItem.id);\n    if (direction === DELETE_DIR) {\n      this.setState((prevState) => ({\n        trash: prevState.trash.concat(swipedItem),\n        items: prevState.items.filter((item) => swipedItem.id !== item.id),\n      }));\n    } else if (direction === KEEP_DIR) {\n      this.setState((prevState) => ({\n        keep: prevState.keep.concat(swipedItem),\n        items: prevState.items.filter((item) => swipedItem.id !== item.id),\n      }));\n    }\n    this.setState({ lastAction: { direction, name: swipedItem.name } });\n  }\n\n  onEmptyTrash() {\n    if (this.state.trash.length === 0) return;\n\n    const { delete_mode: deleteMode } = this.state.settings;\n    const mutationType =\n      deleteMode === \"delete\" ? \"delete_item\" : \"archive_item\";\n    const mutation = `\n      mutation {\n        ${this.state.trash.reduce(\n          (acc, curr) =>\n            acc + `del${curr.id}: ${mutationType}(item_id: ${curr.id}) { id }`,\n          \"\"\n        )}\n      }\n    `;\n\n    this.setState({ loading: true });\n    monday.api(mutation).then((res) => {\n      this.setState({ loading: false, trash: [] });\n    });\n  }\n\n  render() {\n    const hasSelectedBacklogGroup = this.state.settings.backlog_group ?? false;\n    return (\n      <MondayContext.Provider value={monday}>\n        <div className=\"App\">\n          {hasSelectedBacklogGroup ? (\n            <SwipeScreen\n              loading={this.state.loading}\n              items={this.state.items}\n              trash={this.state.trash}\n              onSwipe={this.onSwipe.bind(this)}\n              onTrashButtonPress={() => this.swipeOnTopItem(DELETE_DIR)}\n              onKeepButtonPress={() => this.swipeOnTopItem(KEEP_DIR)}\n              onEmptyTrash={this.onEmptyTrash.bind(this)}\n            />\n          ) : (\n            <InstructionsScreen />\n          )}\n        </div>\n      </MondayContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}